application-description=@project.description@
application-version=@project.version@
logging.level.org.springframework.boot.autoconfigure=ERROR

#logging.level.org.springframework=ERROR
#logging.level.org.test=DEBUG
#logging.file.name=app.log

#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
#logging.pattern.file=%d %p %c{1.} [%t] %m%n

flyway.enabled=true

spring.main.banner-mode=off

spring.datasource.initialize=true

spring.datasource.url=jdbc:postgresql://localhost:5433/geology
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.batch.jdbc.initialize-schema=always
app.upload.temp=upload-dir

#60 sec
spring.datasource.hikari.connection-timeout=60000
# max 5
spring.datasource.hikari.maximum-pool-size=5

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

springdoc.show-actuator=true

#Queries
sections.query.find.all=SELECT public.sections.id AS string, public.sections.section_name  public.sections
files.query.insert=INSERT INTO public.fles_storage ( author, context,size, file_name) VALUES ( :author, :context, :size, :file_name)
files.query.find.id=SELECT id as string, to_char(created_date, 'DD.Mon.YYYY HH24:MI'), author, size, file_name FROM public.files_storage where id=:id
section.query.insert=INSERT INTO public.sections( section_name, id_file)  VALUES ( :section_name, :id_file);
section.query.find.id=SELECT id as string, section_name, id_file as string FROM public.sections where  id=:id
classes.query.find.all=SELECT id as string, parent_id as string, class_name, code FROM public.classes
classes.query.find.id=SELECT id as string, parent_id as string, class_name, code FROM public.classes WHERE id=:id
classes.query.insert=INSERT INTO public.classes ( parent_id, class_name, code)  (:parent_id, :class_name, :code)
classes.query.batch.insert=INSERT INTO public.classes ( parent_id, class_name, code)  (?, ?, ?)
